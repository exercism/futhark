import "intergalactic_transmission"

-- empty message
-- ==
-- entry: test_transmit_sequence
-- input { empty([0]u8) }
-- output { empty([0]u8) }

-- 0x00 is transmitted as 0x0000
-- ==
-- entry: test_transmit_sequence
-- input { [0x00u8] }
-- output { [0x00u8, 0x00u8] }

-- 0x02 is transmitted as 0x0300
-- ==
-- entry: test_transmit_sequence
-- input { [0x02u8] }
-- output { [0x03u8, 0x00u8] }

-- 0x06 is transmitted as 0x0600
-- ==
-- entry: test_transmit_sequence
-- input { [0x06u8] }
-- output { [0x06u8, 0x00u8] }

-- 0x05 is transmitted as 0x0581
-- ==
-- entry: test_transmit_sequence
-- input { [0x05u8] }
-- output { [0x05u8, 0x81u8] }

-- 0x29 is transmitted as 0x2881
-- ==
-- entry: test_transmit_sequence
-- input { [0x29u8] }
-- output { [0x28u8, 0x81u8] }

-- 0xc001c0de is transmitted as 0xc000711be1
-- ==
-- entry: test_transmit_sequence
-- input { [0xc0u8, 0x01u8, 0xc0u8, 0xdeu8] }
-- output { [0xc0u8, 0x00u8, 0x71u8, 0x1bu8, 0xe1u8] }

-- six byte message
-- ==
-- entry: test_transmit_sequence
-- input { [0x47u8, 0x72u8, 0x65u8, 0x61u8, 0x74u8, 0x21u8] }
-- output { [0x47u8, 0xb8u8, 0x99u8, 0xacu8, 0x17u8, 0xa0u8, 0x84u8] }

-- seven byte message
-- ==
-- entry: test_transmit_sequence
-- input { [0x47u8, 0x72u8, 0x65u8, 0x61u8, 0x74u8, 0x31u8, 0x21u8] }
-- output { [0x47u8, 0xb8u8, 0x99u8, 0xacu8, 0x17u8, 0xa0u8, 0xc5u8, 0x42u8] }

-- eight byte message
-- ==
-- entry: test_transmit_sequence
-- input { [0xc0u8, 0x01u8, 0x13u8, 0x37u8, 0xc0u8, 0xdeu8, 0x21u8, 0x21u8] }
-- output { [0xc0u8, 0x00u8, 0x44u8, 0x66u8, 0x7du8, 0x06u8, 0x78u8, 0x42u8, 0x21u8, 0x81u8] }

-- twenty byte message
-- ==
-- entry: test_transmit_sequence
-- input { [0x45u8, 0x78u8, 0x65u8, 0x72u8, 0x63u8, 0x69u8, 0x73u8, 0x6du8, 0x20u8, 0x69u8, 0x73u8, 0x20u8, 0x61u8, 0x77u8, 0x65u8, 0x73u8, 0x6fu8, 0x6du8, 0x65u8, 0x21u8] }
-- output { [0x44u8, 0xbdu8, 0x18u8, 0xafu8, 0x27u8, 0x1bu8, 0xa5u8, 0xe7u8, 0x6cu8, 0x90u8, 0x1bu8, 0x2eu8, 0x33u8, 0x03u8, 0x84u8, 0xeeu8, 0x65u8, 0xb8u8, 0xdbu8, 0xedu8, 0xd7u8, 0x28u8, 0x84u8] }

-- empty message
-- ==
-- entry: test_decode_message
-- input { empty([0]u8) }
-- output { empty([0]u8) }

-- zero message
-- ==
-- entry: test_decode_message
-- input { [0x00u8, 0x00u8] }
-- output { [0x00u8] }

-- 0x0300 is decoded to 0x02
-- ==
-- entry: test_decode_message
-- input { [0x03u8, 0x00u8] }
-- output { [0x02u8] }

-- 0x0581 is decoded to 0x05
-- ==
-- entry: test_decode_message
-- input { [0x05u8, 0x81u8] }
-- output { [0x05u8] }

-- 0x2881 is decoded to 0x29
-- ==
-- entry: test_decode_message
-- input { [0x28u8, 0x81u8] }
-- output { [0x29u8] }

-- first byte has wrong parity
-- ==
-- entry: test_decode_message
-- input { [0x07u8, 0x00u8] }
-- error: Error*

-- second byte has wrong parity
-- ==
-- entry: test_decode_message
-- input { [0x03u8, 0x68u8] }
-- error: Error*

-- 0xcf4b00 is decoded to 0xce94
-- ==
-- entry: test_decode_message
-- input { [0xcfu8, 0x4bu8, 0x00u8] }
-- output { [0xceu8, 0x94u8] }

-- 0xe2566500 is decoded to 0xe2ad90
-- ==
-- entry: test_decode_message
-- input { [0xe2u8, 0x56u8, 0x65u8, 0x00u8] }
-- output { [0xe2u8, 0xadu8, 0x90u8] }

-- six byte message
-- ==
-- entry: test_decode_message
-- input { [0x47u8, 0xb8u8, 0x99u8, 0xacu8, 0x17u8, 0xa0u8, 0x84u8] }
-- output { [0x47u8, 0x72u8, 0x65u8, 0x61u8, 0x74u8, 0x21u8] }

-- seven byte message
-- ==
-- entry: test_decode_message
-- input { [0x47u8, 0xb8u8, 0x99u8, 0xacu8, 0x17u8, 0xa0u8, 0xc5u8, 0x42u8] }
-- output { [0x47u8, 0x72u8, 0x65u8, 0x61u8, 0x74u8, 0x31u8, 0x21u8] }

-- last byte has wrong parity
-- ==
-- entry: test_decode_message
-- input { [0x47u8, 0xb8u8, 0x99u8, 0xacu8, 0x17u8, 0xa0u8, 0xc5u8, 0x43u8] }
-- error: Error*

-- eight byte message
-- ==
-- entry: test_decode_message
-- input { [0xc0u8, 0x00u8, 0x44u8, 0x66u8, 0x7du8, 0x06u8, 0x78u8, 0x42u8, 0x21u8, 0x81u8] }
-- output { [0xc0u8, 0x01u8, 0x13u8, 0x37u8, 0xc0u8, 0xdeu8, 0x21u8, 0x21u8] }

-- twenty byte message
-- ==
-- entry: test_decode_message
-- input { [0x44u8, 0xbdu8, 0x18u8, 0xafu8, 0x27u8, 0x1bu8, 0xa5u8, 0xe7u8, 0x6cu8, 0x90u8, 0x1bu8, 0x2eu8, 0x33u8, 0x03u8, 0x84u8, 0xeeu8, 0x65u8, 0xb8u8, 0xdbu8, 0xedu8, 0xd7u8, 0x28u8, 0x84u8] }
-- output { [0x45u8, 0x78u8, 0x65u8, 0x72u8, 0x63u8, 0x69u8, 0x73u8, 0x6du8, 0x20u8, 0x69u8, 0x73u8, 0x20u8, 0x61u8, 0x77u8, 0x65u8, 0x73u8, 0x6fu8, 0x6du8, 0x65u8, 0x21u8] }

-- wrong parity on 16th byte
-- ==
-- entry: test_decode_message
-- input { [0x44u8, 0xbdu8, 0x18u8, 0xafu8, 0x27u8, 0x1bu8, 0xa5u8, 0xe7u8, 0x6cu8, 0x90u8, 0x1bu8, 0x2eu8, 0x33u8, 0x03u8, 0x84u8, 0xefu8, 0x65u8, 0xb8u8, 0xdbu8, 0xedu8, 0xd7u8, 0x28u8, 0x84u8] }
-- error: Error*

entry test_transmit_sequence (message: []u8): []u8 =
  transmit_sequence message

entry test_decode_message (message: []u8): []u8 =
  decode_message message
